buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detekt_version"
    }
}

plugins {
    id 'kotlin'
    id 'maven-publish'
}
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'io.gitlab.arturbosch.detekt'

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

detekt {
    toolVersion = detekt_version
    input = files("src/main/kotlin")
    config = files("detekt-config.yml")
    autoCorrect = true
}

tasks["detekt"].dependsOn(":custom-detekt-rules:assemble")

shadowJar {
    baseName = 'road-runner-gui'
    destinationDir = buildDir
    classifier = null
    version = road_runner_version
    manifest {
        attributes 'Main-Class': 'com.acmerobotics.roadrunner.gui.Main'
    }
}

dependencies {
    implementation project(':core')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "org.apache.commons:commons-math3:3.6.1"

    implementation "org.knowm.xchart:xchart:3.5.2"

    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:$detekt_version"
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-cli:$detekt_version"

    detektPlugins project(':custom-detekt-rules')
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

def pomConfig = {
    licenses {
        license {
            name "The MIT License"
            url "https://opensource.org/licenses/MIT"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "rbrott"
            name "Ryan Brott"
            email "rcbrott@gmail.com"
        }
    }

    scm {
        url "https://github.com/acmerobotics/road-runner"
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar
            groupId = 'com.acmerobotics.roadrunner'
            artifactId = 'gui'
            version road_runner_version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', '2D mobile robot motion planning library written in Kotlin')
                root.appendNode('name', 'Road Runner')
                root.appendNode('url', 'https://github.com/acmerobotics/road-runner')
                root.children().last() + pomConfig
            }
        }
    }
}
